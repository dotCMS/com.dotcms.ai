<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>dotAI</title>

        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/x-icon" href="favicon.ico" />
            <script>

            const getText = async (prompt, callback) => {
                document.getElementById("loader").style.display="block";
                document.getElementById("submit").disabled=true;
                document.getElementById("answer").value="";


                const response = await fetch('/api/v1/ai/completions', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        query: prompt,
                        stream: true,
                        searchLimit:50,
                        threshold:.2
                    }),
                    });
                    const reader = response.body?.pipeThrough(new TextDecoderStream()).getReader();

                    document.getElementById("loader").style.display="none";
                    document.getElementById("submit").disabled=false;

                    if (!reader) return;
                    // eslint-disable-next-line no-constant-condition
                    while (true) {
                    // eslint-disable-next-line no-await-in-loop
                    const { value, done } = await reader.read();
                    if (done) break;
                    let dataDone = false;
                    const arr = value.split('\n');
                    arr.forEach((data) => {
                        if (data.trim().length === 0) return; // ignore empty message
                        if (data.startsWith(':')) return; // ignore sse comment message
                        if (data === 'data: [DONE]') {
                        dataDone = true;
                        return;
                        }

                        const json = JSON.parse(data.substring(6));
                        if(json.choices[0].delta.content==null) return;
                        document.getElementById("answer").value += json.choices[0].delta.content;
                    });
                    if (dataDone) break;
                }
            };
        </script>




    </head>

    <style>
        .card {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: 2;
            grid-template-areas:
				"t-1 t-2 t-3 t-4"
				"ver ver ver ver";
        }
        [for*='-1'] {
            grid-area: t-1;
        }
        [for*='-2'] {
            grid-area: t-2;
        }
        [for*='-3'] {
            grid-area: t-3;
        }
        [for*='-4'] {
            grid-area: t-4;
        }
        :checked + label + article
        {
            grid-area: ver;
            z-index: 1;
        }
        .card{
            max-width: 650px;
            overflow: hidden;
        }
        [class*='tab-'] {
            opacity: 0;
            max-width: 0;
            max-height: 0;
            display: flex;
            flex-direction: columns;
            flex-wrap: nowrap;
            align-items: center;
        }
        :checked + label + [class*='tab-'] {
            opacity: 1;
            max-width: 100%;
            max-height: 100vh;
            animation: show 1s;
        }
        label {
            cursor: pointer;
            text-align: center;
        }
        label:hover {
            background: rgba(0,0,0,.2);
        }
        input:not(checked) + label {
            background: rgba(0,0,0,.05);
        }
        input:checked + label {
            background: #fff;
        }
        .hide {
            display: none;
        }
        @keyframes show {
            0%, 20% {
                opacity: 0;
                max-height: 0;
            }
            100%{
                opacity: 1;
                max-height: 100vh;
            }
        }
        .loader {
            border: 8px solid #f3f3f3; /* Light grey */
            border-top: 8px solid #3498db; /* Blue */
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 2s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

    </style>
    <body>


    <h2>This is dotAI!</h2>




    <div class='card'>
        <input class='hide' type="radio" id="tab-1" name="tractor" checked='checked'/>
        <label for='tab-1'>Tab 1</label>
        <div class='tab-1'>
            content in tab1
        </div>
        <input class='hide' type="radio" id="tab-2" name="tractor"/>
        <label for='tab-2'>Tab 2</label>
        <div class='tab-2'>
            Content for tab 2
        </div>
        <input class='hide' type="radio" id="tab-3" name="tractor"/>
        <label for='tab-3'>Tab 3</label>
        <div class='tab-3'>
            Tab for content 3
            </section>
        </div>
        <input class='hide' type="radio" id="tab-4" name="tractor"/>
        <label for='tab-4'>Tab 4</label>
        <div class='tab-4'>
            Tab for content 4
        </div>
    </div>



        <h3>Ask dotCMS.com a question</h3>

        <div style="padding:10px">
            <input type="text" name="question" id="question" style="width:800px;height:30px;"
                value="how can I build a template"
                placeholder="Ask me a dotCMS question"/>
        </div>
        <div style="padding:10px;height:40px;width:800px;">
            <div class="loader" style="display:none;padding:10px;float:left" id="loader"></div>
            <div id="button" style="float:right">
                <input type="button" name="submit" id="submit" value="Submit" onclick="getText(document.getElementById('question').value)"/>
            </div>
        </div>
        <div style="padding:10px">
            <textarea name="answer" id="answer" style="width:800px;height:500px;"></textarea>
        </div>
    </body>
</html>
